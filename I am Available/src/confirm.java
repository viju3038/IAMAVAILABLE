
import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Time;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author PARUL
 */
public class confirm extends javax.swing.JFrame {

    /**
     * Creates new form confirm
     */
    
    private Connection conn;
    private Statement stmt;
    private ResultSet rs, rs1, rs2, rs4;
    private String username = "root";
    private String dbName = "proj1";
    private String password = "";
    DefaultTableModel model;
    private String dbURL="jdbc:mysql://localhost:3306/"+dbName;
    private int sid;

    private confirm() {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
//    public confirm() {
//        initComponents();
//    }
 ArrayList<previousHelpers> viewAllPreviousHelpers()  {
       //String time1 = "00:30:00";


//         String selectQuery = null;

           String selectQuery = "select * from `history`";
//  String selectQuery1 = "SELECT name FROM  signup";
        //System.out.println(a);
        //System.out.println(b);
        ArrayList<previousHelpers> previoushelperList = new ArrayList<previousHelpers>(200);
        try {
            rs = stmt.executeQuery(selectQuery);
            //ResultSet rs1 = stmt.executeQuery(selectQuery1);

            while (rs.next()) {
                previousHelpers preHelp = new previousHelpers();
                 preHelp.setHelperName(rs.getString("helperName"));
               preHelp.setSeekerName(rs.getString("seekerName"));
               preHelp.setDestination(rs.getString("destination"));

                previoushelperList.add(preHelp);
                //  conn.close();
            }
            System.out.println("helperList.size() " + previoushelperList.size());
//            if(helperList.size()==0){
//                JOptionPane.showMessageDialog(null, "Seems Like no helpers available now.....Please try again after some time");
//            }

        } catch (Exception e) {
            e.printStackTrace();
        }

        return previoushelperList;

    }


    /**
     * Creates new form match
     */



      //  c4 = new connection();
 
  public confirm(int sid) {
      this.sid=sid;
      initComponents();
      Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
    try {
            conn = DriverManager.getConnection(dbURL, username, password);
            stmt = conn.createStatement();
        } catch (SQLException ex) {
            //Logger.getLogger(studentlogic.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("Exception " + ex);
        }
        model = new DefaultTableModel();

        String columns[] = {"Helper Name","Seeker Name","Destination"};
        model.setColumnIdentifiers(columns);



        // set font for headers
//        java.awt.Font f = new Font("Arial", Font.ITALIC, 25);
//        JTableHeader header = jTable1.getFont();

        ArrayList<previousHelpers> previoushelperList = viewAllPreviousHelpers();

        Object object[] = new Object[3];
        for (previousHelpers prehelp:previoushelperList) {
           object[0] = prehelp.getHelperName();
             object[1] = prehelp.getSeekerName();
            object[2] = prehelp.getDestination();
            

            model.addRow(object);


//            object[0] = help.getMOT();
//            object[1] = help.getTime();
//            object[2] = help.getSeatAvailable();
//            object[3]=help.getVehicleNo();

            //model.addRow(object);
 

        }
        jTable1.setModel(model);


  }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(154, 154, 154)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jButton1)
                .addGap(43, 43, 43))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
user u=new user(sid);
u.setVisible(true);
this.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(confirm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(confirm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(confirm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(confirm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new confirm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}

class previousHelpers{
String helperName,seekerName,destination;

    public String getHelperName() {
        return helperName;
    }

    public void setHelperName(String helperName) {
        this.helperName = helperName;
    }

    public String getSeekerName() {
        return seekerName;
    }

    public void setSeekerName(String seekerName) {
        this.seekerName = seekerName;
    }

    public String getDestination() {
        return destination;
    }

    public void setDestination(String destination) {
        this.destination = destination;
    }
}